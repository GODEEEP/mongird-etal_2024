# sys files
.DS_Store

# -----------------
# ---- PYTHON -----
# -----------------

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# -----------
# ---- R ----
# -----------

# ignore path
/bak

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# make dependency files
*.d
# emacs backup files
*~
# Compiled Dynamic libraries
*.so
*.dylib
*.dll
# Compiled Static libraries
*.lai
*.la
*.a
*.lib
# Executables
*.exe
*.out
*.app
src/hector
src/hector-ext
src/hector-api
# Hector logs
logs/*.*
*.log
# OS-specific files
.DS_Store
.Trashes
*.swp
# Xcode build directories, schemes, and interface state
*.lock
*.xccheckout
*~.nib
build/
DerivedData/
xcodeuserstate
xcuserdata
project.xcworkspace/
# Project files
project_files/*.*
Release
ipch
Run Test Cases
Debug
libs
project_files/visual_studio/
project_files/VS/*.*
libs/
*.kdev4
*.sdf
*.suo
# Output
output/output*
# R
.Rhistory
R/batchrunner/*.pdf
R/batchrunner/*.csv
.Rapp.history
.Rproj.user
.RData
inst/doc
vignettes/rsconnect


# vignette caches
/vignettes/*_cache

# Rstudio connect files
rsconnect
inst/shinyApp/temp.ini
inst/shinyApp/test.ini
packrat/lib*/

# notebook outputs and inputs
*/input_data/conus_shp
/input_data/wecc_shp
*/input_data/infrastructure_data_csv
*/input_data/raster_data/
*/input_data/tmp
*/input_data/gcam_data/bau_ira_ccs_climate
*/input_data/gcam_data/nz_ira_ccs_climate
*/input_data/gridcerf
*/input_data/west_raster_data
*/input_data/compiled_raster_data
*/input_data/siting_shp
*/input_data/renewable_capacity_factor_data
*/input_data/power_plant_siting_data/power_plant_additions_1km_net_zero.csv
*/input_data/power_plant_siting_data/power_plant_additions_1km_bau.csv
*/input_data/power_plant_siting_data/power_plants_net_zero.csv
*/input_data/power_plant_siting_data/power_plants_bau.csv
/input_data/wrf_template_data/nc_sample_data.nc
*data/output_data
*.idea

/notebooks/clip_raster_extent.ipynb
/notebooks/scratch.ipynb
/notebooks/organize_experiment_output.ipynb